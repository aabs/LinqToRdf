<?xml version="1.0" encoding="utf-8"?>
<!-- 
	Main WiX file for installer.

	<autogenerated>
		This code was generated by a tool.
		Changes to this file may cause incorrect behavior and will be lost if
		the code is regenerated.
	</autogenerated>
-->
<Wix xmlns="http://schemas.microsoft.com/wix/2003/01/wi">
	<Product UpgradeCode="d57e2636-2390-43b6-bb8e-1f00de484803" Name="$(loc.ProductName)" Id="de7066bc-e6b8-4166-a9b4-01c1cf543bdf" Version="0.3.0" Manufacturer="$(loc.Manufacturer)" Language="1033" >
		<Package Id="d4fdb344-9d6c-4c8e-8320-138fdc8d9af7" Manufacturer="$(loc.Manufacturer)" InstallerVersion="200" Platforms="Intel" Languages="1033" Compressed="yes" SummaryCodepage="1252" />

		<!-- 
			Launch conditions and corresponding properties.
		-->
		<Property Id="VSINSTALLREG">
			<RegistrySearch Id="VSInstalledRegistry" Root="HKLM" Key="SOFTWARE\Microsoft\VisualStudio\9.0" Name="InstallDir" Type="directory" />
		</Property>
		<Condition Message="$(loc.VisualStudio2005Required)">VSINSTALLREG OR Installed</Condition>
		<Property Id="FXINSTALLED">
			<RegistrySearch Id="FxInstalledRegistry" Key="SOFTWARE\Microsoft\NET Framework Setup\NDP\v2.0.50727" Name="Install" Root="HKLM" Type="raw"/>
		</Property>
		<Condition Message="$(loc.NetFrameworkRequired)">FXINSTALLED OR Installed</Condition>
		
		<Property Id="VCSINSTALLREG">
			<RegistrySearch Id="CSharpInstalledRegistry" Root="HKLM" Key="SOFTWARE\Microsoft\VisualStudio\9.0\InstalledProducts\Microsoft Visual C#" Name="DefaultProductAttribute" Type="raw" />
		</Property>
		<Condition Message="$(loc.CSharpRequired)">VCSINSTALLREG OR Installed</Condition>


		<Property Id="VBINSTALLREG">
			<RegistrySearch Id="VisualBasicInstalledRegistry" Root="HKLM" Key="SOFTWARE\Microsoft\VisualStudio\9.0\InstalledProducts\Microsoft Visual Basic" Name="DefaultProductAttribute" Type="raw" />
		</Property>
		<Condition Message="$(loc.VisualBasicRequired)">VBINSTALLREG OR Installed</Condition>
		
		<!-- 
			Other properties used by the installer. 
		-->
		<Property Id="VSROOTREG">
			<RegistrySearch Id="VSRootRegistry" Root="HKLM" Key="SOFTWARE\Microsoft\VisualStudio\9.0\Setup\VS" Name="ProductDir" Type="directory" />
		</Property>
		<!-- We do an install for all users if possible, and fall back on single user if it's not. -->
		<Property Id="ALLUSERS">2</Property>
		<!-- Following properties provide Add/Remove Programs functionality. -->
		<Property Id="ARPCONTACT"><![CDATA[$(loc.Manufacturer)]]></Property>
		<Property Id="ARPPRODUCTICON">Product.ico</Property>
		<Property Id="ARPURLINFOABOUT"><![CDATA[http://code.google.com/p/linqtordf/]]></Property>
		<!-- Following properties define error messages used by custom actions. -->
		<Property Id="NEWERVERSIONMSG"><![CDATA[$(loc.ExistingVersionInstalled)]]></Property>
		<Property Id="ADMINORADVERTISEDMSG"><![CDATA[$(loc.AdminOrAdvertised)]]></Property>
		
		<!-- 
			Define the single feature for this MSI.  When including custom fragments that define 
			additional components, you should reference this feature.
		-->
		<Feature Id="DefaultFeature" Level="1" ConfigurableDirectory="TARGETDIR">
			<ComponentRef Id="CreateTargetDirectory"/>
			<ComponentRef Id="_LinqToRdfDesigner_GAC"/>
			<ComponentRef Id="_LinqToRdfDesigner"/>
			<ComponentRef Id="SupportingFiles"/>
		
			<ComponentRef Id="_Dsl_GAC"/>
			<ComponentRef Id="_Dsl"/>
			
			<ComponentRef Id="ItemTemplate1"/>
			<ComponentRef Id="ItemTemplate2"/>
			<ComponentRef Id="Schemas"/>
		</Feature>

		<FragmentRef Id="RegistryFragment" />
		
		<!-- 
			Check for other versions of the product that are already installed.
		-->
		<Upgrade Id="d57e2636-2390-43b6-bb8e-1f00de484803">
			<UpgradeVersion Minimum="0.0.0" Property="EXISTINGPRODUCTFOUND" OnlyDetect="yes" IncludeMinimum="yes" />
		</Upgrade>

		<!-- 
			Define media types.  All files go into the embedded cab (id=1), 
			except the EULA, which is standalone (id=2)
		-->
		<Media Id="1" EmbedCab="yes" Cabinet="Cab1" />
		<Media Id="2" />

		<!-- 
			Define custom actions.
		-->
		<CustomAction Id="DIRCA_TARGETDIR" Return="check" Execute="firstSequence" Property="TARGETDIR" Value="[ProgramFilesFolder]LinqToRdf" />
		<CustomAction Id="DIRCA_VSINSTALLDIR" Return="check" Execute="firstSequence" Property="VSINSTALLDIR" Value="[VSINSTALLREG]" />
		<CustomAction Id="DIRCA_VSROOTDIR" Return="check" Execute="firstSequence" Property="VSROOTDIR" Value="[VSROOTREG]" />
		<CustomAction Id="ERRCA_CANCELEXISTINGVERSION" Return="check" Error="[EXISTINGVERSIONMSG]" />
		<CustomAction Id="ERRCA_ADMINORADVERTISED" Return="check" Error="[ADMINORADVERTISEDMSG]" />
		<!-- Custom action for running devenv /setup. -->
		<CustomAction Id="SET_DEVENV" Return="check" Execute="immediate" Property="DEVENV" Value="[VSINSTALLDIR]devenv.exe" />
		<CustomAction Id="DEVENV_SETUP" Property="DEVENV" Execute="commit" ExeCommand="/setup" Return="ignore" Impersonate="no" />
		<!-- Custom actions for opening supporting files after install. -->	
		<CustomAction Id="FIND_EXPLORER" Return="check" Execute="firstSequence" Property="EXPLORER" Value="[WindowsFolder]explorer.exe" />
	
		<CustomAction Id="OpenCA_Readme" Property="EXPLORER" ExeCommand='"[TARGETDIR]Readme.htm"' Return="asyncNoWait"/>


		<!-- 
			Install sequences.  Note that some items appear in both InstallUISequence and InstallExecuteSequence.
			This is to support unattended install, since InstallUISequence is not run in that case.
		-->
		<InstallUISequence>
			<LaunchConditions After="AppSearch" />
			<Custom Action="DIRCA_TARGETDIR" After="ValidateProductID">TARGETDIR=""</Custom>
			<Custom Action="DIRCA_VSINSTALLDIR" After="DIRCA_TARGETDIR">VSINSTALLDIR=""</Custom>
			<Custom Action="DIRCA_VSROOTDIR" After="DIRCA_VSINSTALLDIR">VSROOTDIR=""</Custom>
			<Custom Action="FIND_EXPLORER" After="DIRCA_VSROOTDIR">EXPLORER=""</Custom>
			<Show Dialog="ResumeForm" After="IsolateComponents">Installed="" AND RESUME</Show>
			<Show Dialog="MaintenanceForm" After="ResumeForm"><![CDATA[Installed<>""]]></Show>
			<Show Dialog="WelcomeForm" After="CostFinalize">Installed="" AND NOT RESUME</Show>
			<Show Dialog="ProgressForm" After="WelcomeForm" />
			<Show Dialog="FatalErrorForm" OnExit="error">NOT HideFatalErrorForm</Show>
			<Show Dialog="UserExitForm" OnExit="cancel" />
			<Show Dialog="FinishedForm" OnExit="success" />
	
			<Custom Action="OpenCA_Readme" After="ExecuteAction">NOT Installed</Custom>
		</InstallUISequence>
		<AdminExecuteSequence>
			<Custom Action="ERRCA_ADMINORADVERTISED" Before="CostInitialize" />
		</AdminExecuteSequence>
		<AdvertiseExecuteSequence>
			<Custom Action="ERRCA_ADMINORADVERTISED" Before="CostInitialize" />
		</AdvertiseExecuteSequence>
		<InstallExecuteSequence>
			<RemoveExistingProducts After="InstallInitialize" />
			<LaunchConditions After="AppSearch" />
			<Custom Action="DIRCA_TARGETDIR" After="ValidateProductID">TARGETDIR=""</Custom>
			<Custom Action="DIRCA_VSINSTALLDIR" After="DIRCA_TARGETDIR">VSINSTALLDIR=""</Custom>
			<Custom Action="SET_DEVENV" After="DIRCA_VSINSTALLDIR">DEVENV=""</Custom>
			<Custom Action="DIRCA_VSROOTDIR" After="SET_DEVENV">VSROOTDIR=""</Custom>
			<Custom Action="ERRCA_CANCELEXISTINGVERSION" After="FindRelatedProducts">EXISTINGPRODUCTFOUND AND NOT Installed</Custom>
			<!-- Following action must be run after MsiPublishAssemblies, because it depends on assemblies published to the GAC. -->
			<Custom Action="DEVENV_SETUP" After="MsiPublishAssemblies" />
		</InstallExecuteSequence>

		<!-- 
			Embedded binaries (dlls for custom actions, icons, bitmaps).
		-->
		<Binary Id="BannerBitmap" src="Resources\BannerBitmap.bmp" />
		<Binary Id="UpFldrBtn" src="Resources\UpFldrBtn.bmp" />
		<Binary Id="NewFldrBtn" src="Resources\NewFldrBtn.bmp" />
		<Icon Id="Product.ico" src="Resources\Product.ico" />
		<Icon Id="_ReadmeShortcut.ico" src="Resources\ReadmeShortcut.ico" />
	</Product>
</Wix>
