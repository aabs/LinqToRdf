<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" debug="true"#>
<#@ assembly name = "System.Core.dll" #>
<#@ assembly name = "linqtordf.dll" #>
<#@ import namespace = "System.Collections.Generic" #>
<#@ output extension=".n3" #>
<#@ LinqToRdfDesigner processor="LinqToRdfDesignerDirectiveProcessor" requires="fileName='SystemScannerModel.rdfx'"  #>
<#
// prolog - set up some book-keeping variables
string baseUri = this.ModelRoot.OntologyBaseUrl;
HashSet<ModelClass> processedClasses = new HashSet<ModelClass>();


#>
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns\#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil\#> .
@prefix log: <http://www.w3.org/2000/10/swap/log\#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema\#> .
@prefix owl:  <http://www.w3.org/2002/07/owl\#> .
@prefix xsdt: <http://www.w3.org/2001/XMLSchema\#>.
@prefix : <<#
	Write(baseUri);
#>> .

<#
  foreach (ModelType type in this.ModelRoot.Types)
  {
	ModelClass modelClass = type as ModelClass;
	if (modelClass != null && !processedClasses.Contains(modelClass))
	{
	bool hasAttributes = (modelClass.Attributes != null && modelClass.Attributes.Count > 0);
#>
:<#= modelClass.Name #> a owl:Class <#

		if(modelClass.Superclass == null) 
			WriteLine(".");
		else
		{
			WriteLine(";");
			WriteLine("\trdfs:subClassOf :"+modelClass.Superclass.Name +" .");
		}
		processedClasses.Add(modelClass);
		foreach(ModelAttribute attr in modelClass.Attributes)
		{
			if(attr.OwlPropertyUri != null && attr.OwlPropertyUri.Length > 0)
			{
				WriteLine(":"+attr.OwlPropertyUri);
				WriteLine("\trdfs:domain :" + modelClass.Name +";");
				WriteLine("\trdfs:range :" + attr.Type +".");
			}
		}
		
		foreach(Aggregation aggregation in Aggregation.GetLinksToAggregationTargets(modelClass))
		{
				WriteLine(":"+aggregation.OwlObjectPropertyUri);
				WriteLine("\trdfs:domain :" + modelClass.Name +";");
				WriteLine("\trdfs:range :" + aggregation.Target.Name +".");
		}
		
		foreach(Composition comp in Composition.GetLinksToCompositionTargets(modelClass))
		{
				WriteLine(":"+comp.OwlObjectPropertyUri);
				WriteLine("\trdfs:domain :" + modelClass.Name +";");
				WriteLine("\trdfs:range :" + comp.Target.Name +".");
		}
    }
  }
#>